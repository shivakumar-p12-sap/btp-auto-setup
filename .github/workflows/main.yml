name: Kyma Btpsa

on:
  workflow_dispatch:

# variables used by all jobs
env:
  K8S_NAMESPACE: btpsa

jobs:
  integration-test:
    runs-on: ubuntu-latest
    container:
      image: shivakumarp12/btp-setup-automator:latest
      options: --user root

    # variables used only by the job integration-test, move to global, if cleanup or log job need them too
    env:
      BTPSA_PARAM_MYEMAIL: ${{ secrets.BTPSA_PARAM_MYEMAIL }}
      BTPSA_PARAM_GLOBALACCOUNT: ${{ secrets.BTPSA_PARAM_GLOBALACCOUNT_KYMA }}
      BTPSA_PARAM_MYPASSWORD: ${{ secrets.BTPSA_PARAM_MYPASSWORD }}
      USE_CASES: ${{ github.workspace }}
      GIT_TOOL_TOKEN: ${{ secrets.GIT_TOOL_TOKEN }}
      KUBECONFIG_PATH: ${{ github.workspace }}/.kube/serviceaccount.yaml 
      
    steps:
      - name: store kubeconfig
        shell: bash
        run: |
          mkdir -p ${{ github.workspace }}/.kube && \
          chown 777 ${{ github.workspace }}/.kube && \
          printf "${{ secrets.SERVICE_ACCOUNT_KYMA1 }}" > ${{ env.KUBECONFIG_PATH }}
      - name: checkout repository
        uses: actions/checkout@v2          
      - name: Authenticate with Kubernetes
        uses: azure/k8s-set-context@v2
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.SERVICE_ACCOUNT_KYMA1 }}
      - name: Check connection
        shell: bash
        run: |
          kubectl get ns         
          
      - name: 'Test Alert notification service and API'
        working-directory: /home/user
        shell: bash
        run: |
          kymaenv=`cat "${USE_CASES}/use_cases/kyma-usecase-environment.json"`
          cat "${USE_CASES}/use_cases/SERVICE-kyma-alert-notification-standard-use-case.json" | jq --argjson a "${kymaenv}" '.services += [$a]' > kymausecase.json
          python3 btpsa \
          -parameterfile "${USE_CASES}/use_cases/kyma-usecase-parameters.json" \
          -usecasefile kymausecase.json \
          -kubeconfigpath ${{ env.KUBECONFIG_PATH}} \
          -k8snamespace ${{ env.K8S_NAMESPACE }} 
          cp /home/user/log/script.log /home/user/logs/k8s/report/alert-notification-standard.log
          cp /home/user/logs/k8s/report/apitestresult.json /home/user/logs/k8s/report/alert-notification-standard.json
    
      - name: 'Test Auditlog service with plan oauth2 and API'
        working-directory: /home/user
        shell: bash
        run: |
          kymaenv=`cat "${USE_CASES}/use_cases/kyma-usecase-environment.json"`
          cat "${USE_CASES}/use_cases/SERVICE-kyma-auditlog-oauth2-use-case.json" | jq --argjson a "${kymaenv}" '.services += [$a]' > kymausecase.json
          python3 btpsa \
          -parameterfile "${USE_CASES}/use_cases/kyma-usecase-parameters.json" \
          -usecasefile kymausecase.json \
          -kubeconfigpath ${{ env.KUBECONFIG_PATH}} \
          -k8snamespace ${{ env.K8S_NAMESPACE }} 
          cp /home/user/log/script.log /home/user/logs/k8s/report/auditlog-oauth2.log
          cp /home/user/logs/k8s/report/apitestresult.json /home/user/logs/k8s/report/auditlog-oauth2.json

      - name: 'Test Auditlog service with plan standard and API'
        working-directory: /home/user
        shell: bash
        run: |
          kymaenv=`cat "${USE_CASES}/use_cases/kyma-usecase-environment.json"`
          cat "${USE_CASES}/use_cases/SERVICE-kyma-auditlog-standard-use-case.json" | jq --argjson a "${kymaenv}" '.services += [$a]' > kymausecase.json
          python3 btpsa \
          -parameterfile "${USE_CASES}/use_cases/kyma-usecase-parameters.json" \
          -usecasefile kymausecase.json \
          -kubeconfigpath ${{ env.KUBECONFIG_PATH}} \
          -k8snamespace ${{ env.K8S_NAMESPACE }} 
          cp /home/user/log/script.log /home/user/logs/k8s/report/auditlog-standard.log
          cp /home/user/logs/k8s/report/apitestresult.json /home/user/logs/k8s/report/auditlog-standard.json

      # - name: 'Test Aderestapi service and API'
      #   working-directory: /home/user
      #   shell: bash
      #   run: |
      #     kymaenv=`cat "${USE_CASES}/use_cases/kyma-usecase-environment.json"`
      #     cat "${USE_CASES}/use_cases/SERVICE-kyma-adsrestapi-standard-use-case.json" | jq --argjson a "${kymaenv}" '.services += [$a]' > kymausecase.json
      #     python3 btpsa \
      #     -parameterfile "${USE_CASES}/use_cases/kyma-usecase-parameters.json" \
      #     -usecasefile kymausecase.json \
      #     -kubeconfigpath ${{ env.KUBECONFIG_PATH}} \
      #     -k8snamespace ${{ env.K8S_NAMESPACE }} 
      #     cp /home/user/log/script.log /home/user/logs/k8s/report/adsrestapi-standard.log
      #     cp /home/user/logs/k8s/report/apitestresult.json /home/user/logs/k8s/report/adsrestapi-standard.json          

      - name: 'Test Business logging service and API'
        working-directory: /home/user
        shell: bash
        run: |
          kymaenv=`cat "${USE_CASES}/use_cases/kyma-usecase-environment.json"`
          cat "${USE_CASES}/use_cases/SERVICE-kyma-business-logging-default-use-case.json" | jq --argjson a "${kymaenv}" '.services += [$a]' > kymausecase.json
          python3 btpsa \
          -parameterfile "${USE_CASES}/use_cases/kyma-usecase-parameters.json" \
          -usecasefile kymausecase.json \
          -kubeconfigpath ${{ env.KUBECONFIG_PATH}} \
          -k8snamespace ${{ env.K8S_NAMESPACE }} 
          cp /home/user/log/script.log /home/user/logs/k8s/report/business-logging-default.log
          cp /home/user/logs/k8s/report/apitestresult.json /home/user/logs/k8s/report/business-logging-default.json 

      - name: 'Test Business-entity-recognition service and API'
        working-directory: /home/user
        shell: bash
        run: |
          kymaenv=`cat "${USE_CASES}/use_cases/kyma-usecase-environment.json"`
          cat "${USE_CASES}/use_cases/SERVICE-kyma-business-entity-recognition-standard-use-case.json" | jq --argjson a "${kymaenv}" '.services += [$a]' > kymausecase.json
          python3 btpsa \
          -parameterfile "${USE_CASES}/use_cases/kyma-usecase-parameters.json" \
          -usecasefile kymausecase.json \
          -kubeconfigpath ${{ env.KUBECONFIG_PATH}} \
          -k8snamespace ${{ env.K8S_NAMESPACE }} 
          cp /home/user/log/script.log /home/user/logs/k8s/report/business-entity-recognition-standard.log
          cp /home/user/logs/k8s/report/apitestresult.json /home/user/logs/k8s/report/business-entity-recognition-standard.json                          

      # - name: 'Test CICD service and API'
      #   working-directory: /home/user
      #   shell: bash
      #   run: |
      #     kymaenv=`cat "${USE_CASES}/use_cases/kyma-usecase-environment.json"`
      #     cat "${USE_CASES}/use_cases/SERVICE-kyma-cicd-service-default-use-case.json" | jq --argjson a "${kymaenv}" '.services += [$a]' > kymausecase.json
      #     set +e
      #     python3 btpsa \
      #     -parameterfile "${USE_CASES}/use_cases/kyma-usecase-parameters.json" \
      #     -usecasefile kymausecase.json \
      #     -kubeconfigpath ${{ env.KUBECONFIG_PATH}} \
      #     -k8snamespace ${{ env.K8S_NAMESPACE }} 
      #     cp /home/user/log/script.log /home/user/logs/k8s/report/cicd-service-default.log
      #     cp /home/user/logs/k8s/report/apitestresult.json /home/user/logs/k8s/report/cicd-service-default.json

      - name: 'Test Credstore service and API'
        working-directory: /home/user
        shell: bash
        run: |
          kymaenv=`cat "${USE_CASES}/use_cases/kyma-usecase-environment.json"`
          cat "${USE_CASES}/use_cases/SERVICE-kyma-credstore-standard-use-case.json" | jq --argjson a "${kymaenv}" '.services += [$a]' > kymausecase.json
          python3 btpsa \
          -parameterfile "${USE_CASES}/use_cases/kyma-usecase-parameters.json" \
          -usecasefile kymausecase.json \
          -kubeconfigpath ${{ env.KUBECONFIG_PATH}} \
          -k8snamespace ${{ env.K8S_NAMESPACE }} 
          cp /home/user/log/script.log /home/user/logs/k8s/report/credstore-standard.log
          cp /home/user/logs/k8s/report/apitestresult.json /home/user/logs/k8s/report/credstore-standard.json

      - name: 'Test Connected products service and API'
        working-directory: /home/user
        shell: bash
        run: |
          kymaenv=`cat "${USE_CASES}/use_cases/kyma-usecase-environment.json"`
          cat "${USE_CASES}/use_cases/SERVICE-kyma-connected-products-acceptance-standard-use-case.json" | jq --argjson a "${kymaenv}" '.services += [$a]' > kymausecase.json
          python3 btpsa \
          -parameterfile "${USE_CASES}/use_cases/kyma-usecase-parameters.json" \
          -usecasefile kymausecase.json \
          -kubeconfigpath ${{ env.KUBECONFIG_PATH}} \
          -k8snamespace ${{ env.K8S_NAMESPACE }} 
          cp /home/user/log/script.log /home/user/logs/k8s/report/connected-products-acceptance-standard.log
          cp /home/user/logs/k8s/report/apitestresult.json /home/user/logs/k8s/report/connected-products-acceptance-standard.json 

      - name: 'Test Consent repository service and API'
        working-directory: /home/user
        shell: bash
        run: |
          kymaenv=`cat "${USE_CASES}/use_cases/kyma-usecase-environment.json"`
          cat "${USE_CASES}/use_cases/SERVICE-kyma-consent-repository-service-default-use-case.json" | jq --argjson a "${kymaenv}" '.services += [$a]' > kymausecase.json
          python3 btpsa \
          -parameterfile "${USE_CASES}/use_cases/kyma-usecase-parameters.json" \
          -usecasefile kymausecase.json \
          -kubeconfigpath ${{ env.KUBECONFIG_PATH}} \
          -k8snamespace ${{ env.K8S_NAMESPACE }} 
          cp /home/user/log/script.log /home/user/logs/k8s/report/consent-repository-service-default.log
          cp /home/user/logs/k8s/report/apitestresult.json /home/user/logs/k8s/report/consent-repository-service-default.json 

      - name: 'Test connectivity service and API'
        working-directory: /home/user
        shell: bash
        run: |
          kymaenv=`cat "${USE_CASES}/use_cases/kyma-usecase-environment.json"`
          cat "${USE_CASES}/use_cases/SERVICE-kyma-connectivity-connectivity-proxy-use-case.json" | jq --argjson a "${kymaenv}" '.services += [$a]' > kymausecase.json
          python3 btpsa \
          -parameterfile "${USE_CASES}/use_cases/kyma-usecase-parameters.json" \
          -usecasefile kymausecase.json \
          -kubeconfigpath ${{ env.KUBECONFIG_PATH}} \
          -k8snamespace ${{ env.K8S_NAMESPACE }} 
          cp /home/user/log/script.log /home/user/logs/k8s/report/connectivity-connectivity-proxy.log
          cp /home/user/logs/k8s/report/apitestresult.json /home/user/logs/k8s/report/connectivity-connectivity-proxy.json

      - name: 'Test Certificate service and API'
        working-directory: /home/user
        shell: bash
        run: |
          kymaenv=`cat "${USE_CASES}/use_cases/kyma-usecase-environment.json"`
          cat "${USE_CASES}/use_cases/SERVICE-kyma-certificate-service-standard-use-case.json" | jq --argjson a "${kymaenv}" '.services += [$a]' > kymausecase.json
          python3 btpsa \
          -parameterfile "${USE_CASES}/use_cases/kyma-usecase-parameters.json" \
          -usecasefile kymausecase.json \
          -kubeconfigpath ${{ env.KUBECONFIG_PATH}} \
          -k8snamespace ${{ env.K8S_NAMESPACE }} 
          cp /home/user/log/script.log /home/user/logs/k8s/report/certificate-service-standard.log
          cp /home/user/logs/k8s/report/apitestresult.json /home/user/logs/k8s/report/certificate-service-standard.json           


      - name: 'Test Data Custodian service and API'
        working-directory: /home/user
        shell: bash
        run: |
          kymaenv=`cat "${USE_CASES}/use_cases/kyma-usecase-environment.json"`
          cat "${USE_CASES}/use_cases/SERVICE-kyma-data-custodian-default-use-case.json" | jq --argjson a "${kymaenv}" '.services += [$a]' > kymausecase.json
          python3 btpsa \
          -parameterfile "${USE_CASES}/use_cases/kyma-usecase-parameters.json" \
          -usecasefile kymausecase.json \
          -kubeconfigpath ${{ env.KUBECONFIG_PATH}} \
          -k8snamespace ${{ env.K8S_NAMESPACE }} 
          cp /home/user/log/script.log /home/user/logs/k8s/report/data-custodian-default.log
          cp /home/user/logs/k8s/report/apitestresult.json /home/user/logs/k8s/report/data-custodian-default.json                     

      - name: 'Test destination service and API'
        working-directory: /home/user
        shell: bash
        run: |
          kymaenv=`cat "${USE_CASES}/use_cases/kyma-usecase-environment.json"`
          cat "${USE_CASES}/use_cases/SERVICE-kyma-destination-lite-use-case.json" | jq --argjson a "${kymaenv}" '.services += [$a]' > kymausecase.json
          python3 btpsa \
          -parameterfile "${USE_CASES}/use_cases/kyma-usecase-parameters.json" \
          -usecasefile kymausecase.json \
          -kubeconfigpath ${{ env.KUBECONFIG_PATH}} \
          -k8snamespace ${{ env.K8S_NAMESPACE }} 
          cp /home/user/log/script.log /home/user/logs/k8s/report/destination-lite.log
          cp /home/user/logs/k8s/report/apitestresult.json /home/user/logs/k8s/report/destination-lite.json

      # - name: 'Test dq-service and API'
      #   working-directory: /home/user
      #   shell: bash
      #   run: |
      #     kymaenv=`cat "${USE_CASES}/use_cases/kyma-usecase-environment.json"`
      #     cat "${USE_CASES}/use_cases/SERVICE-kyma-dq-services-standard-use-case.json" | jq --argjson a "${kymaenv}" '.services += [$a]' > kymausecase.json
      #     python3 btpsa \
      #     -parameterfile "${USE_CASES}/use_cases/kyma-usecase-parameters.json" \
      #     -usecasefile kymausecase.json \
      #     -kubeconfigpath ${{ env.KUBECONFIG_PATH}} \
      #     -k8snamespace ${{ env.K8S_NAMESPACE }} 
      #     cp /home/user/log/script.log /home/user/logs/k8s/report/dq-services-standard.log
      #     cp /home/user/logs/k8s/report/apitestresult.json /home/user/logs/k8s/report/dq-services-standard.json

      - name: 'Test Document-information-extraction service and API'
        working-directory: /home/user
        shell: bash
        run: |
          kymaenv=`cat "${USE_CASES}/use_cases/kyma-usecase-environment.json"`
          cat "${USE_CASES}/use_cases/SERVICE-kyma-sap-document-information-extraction-default-use-case.json" | jq --argjson a "${kymaenv}" '.services += [$a]' > kymausecase.json
          python3 btpsa \
          -parameterfile "${USE_CASES}/use_cases/kyma-usecase-parameters.json" \
          -usecasefile kymausecase.json \
          -kubeconfigpath ${{ env.KUBECONFIG_PATH}} \
          -k8snamespace ${{ env.K8S_NAMESPACE }} 
          cp /home/user/log/script.log /home/user/logs/k8s/report/sap-document-information-extraction-default.log
          cp /home/user/logs/k8s/report/apitestresult.json /home/user/logs/k8s/report/sap-document-information-extraction-default.json 

      - name: 'Test Document-classification service and API'
        working-directory: /home/user
        shell: bash
        run: |
          kymaenv=`cat "${USE_CASES}/use_cases/kyma-usecase-environment.json"`
          cat "${USE_CASES}/use_cases/SERVICE-kyma-document-classification-internal-production-default-use-case.json" | jq --argjson a "${kymaenv}" '.services += [$a]' > kymausecase.json
          python3 btpsa \
          -parameterfile "${USE_CASES}/use_cases/kyma-usecase-parameters.json" \
          -usecasefile kymausecase.json \
          -kubeconfigpath ${{ env.KUBECONFIG_PATH}} \
          -k8snamespace ${{ env.K8S_NAMESPACE }} 
          cp /home/user/log/script.log /home/user/logs/k8s/report/document-classification-internal-production-default.log
          cp /home/user/logs/k8s/report/apitestresult.json /home/user/logs/k8s/report/document-classification-internal-production-default.json

      - name: 'Test Data-attribute-recommendation service and API'
        working-directory: /home/user
        shell: bash
        run: |
          kymaenv=`cat "${USE_CASES}/use_cases/kyma-usecase-environment.json"`
          cat "${USE_CASES}/use_cases/SERVICE-kyma-data-attribute-recommendation-standard-use-case.json" | jq --argjson a "${kymaenv}" '.services += [$a]' > kymausecase.json
          python3 btpsa \
          -parameterfile "${USE_CASES}/use_cases/kyma-usecase-parameters.json" \
          -usecasefile kymausecase.json \
          -kubeconfigpath ${{ env.KUBECONFIG_PATH}} \
          -k8snamespace ${{ env.K8S_NAMESPACE }} 
          cp /home/user/log/script.log /home/user/logs/k8s/report/data-attribute-recommendation-standard.log
          cp /home/user/logs/k8s/report/apitestresult.json /home/user/logs/k8s/report/data-attribute-recommendation-standard.json

      # - name: 'Test Document-translation service and API'
      #   working-directory: /home/user
      #   shell: bash
      #   run: |
      #     kymaenv=`cat "${USE_CASES}/use_cases/kyma-usecase-environment.json"`
      #     cat "${USE_CASES}/use_cases/SERVICE-kyma-document-translation-free-use-case.json" | jq --argjson a "${kymaenv}" '.services += [$a]' > kymausecase.json
      #     python3 btpsa \
      #     -parameterfile "${USE_CASES}/use_cases/kyma-usecase-parameters.json" \
      #     -usecasefile kymausecase.json \
      #     -kubeconfigpath ${{ env.KUBECONFIG_PATH}} \
      #     -k8snamespace ${{ env.K8S_NAMESPACE }} 
      #     cp /home/user/log/script.log /home/user/logs/k8s/report/document-translation-free.log
      #     cp /home/user/logs/k8s/report/apitestresult.json /home/user/logs/k8s/report/document-translation-free.json

      - name: 'Test Dynatrace service and API'
        working-directory: /home/user
        shell: bash
        run: |
          kymaenv=`cat "${USE_CASES}/use_cases/kyma-usecase-environment.json"`
          cat "${USE_CASES}/use_cases/SERVICE-kyma-dynatrace-environment-use-case.json" | jq --argjson a "${kymaenv}" '.services += [$a]' > kymausecase.json
          python3 btpsa \
          -parameterfile "${USE_CASES}/use_cases/kyma-usecase-parameters.json" \
          -usecasefile kymausecase.json \
          -kubeconfigpath ${{ env.KUBECONFIG_PATH}} \
          -k8snamespace ${{ env.K8S_NAMESPACE }} 
          cp /home/user/log/script.log /home/user/logs/k8s/report/dynatrace-environment.log
          cp /home/user/logs/k8s/report/apitestresult.json /home/user/logs/k8s/report/dynatrace-environment.json  

      - name: 'Upload reports'
        working-directory: /home/user
        shell: bash
        run: |
          git clone https://${GIT_TOOL_TOKEN}@github.tools.sap/BTP-E2EScenarioValidation/btpsatest.git
          ls -la
          cp /home/user/log/*.log /home/user/logs/k8s/report/
          rm /home/user/logs/k8s/report/index.html
          rm /home/user/logs/k8s/report/apitestresult.json
          cp ${USE_CASES}/script/template_index.html /home/user/config/templates/report/index.html
          python3 ${USE_CASES}/script/consolidator.py ${GIT_TOOL_TOKEN}
          cp /home/user/logs/k8s/report/* /home/user/btpsatest/logs/ 
          cp /home/user/btpsatest/logs/index.html /home/user/btpsatest/docs/ 
          cd btpsatest
          git config --global user.name "E2EVal-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Log Commit $(TZ=IST-5:30 date +%F_%T) IST"
          git remote set-url origin https://${GIT_TOOL_TOKEN}@github.tools.sap/BTP-E2EScenarioValidation/btpsatest.git
          git push  
          
      - name: 'Test Data-privacy-integration service and API'
        working-directory: /home/user
        shell: bash
        run: |
          kymaenv=`cat "${USE_CASES}/use_cases/kyma-usecase-environment.json"`
          cat "${USE_CASES}/use_cases/SERVICE-kyma-data-privacy-integration-service-standard-use-case.json" | jq --argjson a "${kymaenv}" '.services += [$a]' > kymausecase.json
          python3 btpsa \
          -parameterfile "${USE_CASES}/use_cases/kyma-usecase-parameters.json" \
          -usecasefile kymausecase.json \
          -kubeconfigpath ${{ env.KUBECONFIG_PATH}} \
          -k8snamespace ${{ env.K8S_NAMESPACE }} 
          cp /home/user/log/script.log /home/user/logs/k8s/report/data-privacy-integration-service-standard.log
          cp /home/user/logs/k8s/report/apitestresult.json /home/user/logs/k8s/report/data-privacy-integration-service-standard.json

      - name: 'Test Data-lifecycle service and API'
        working-directory: /home/user
        shell: bash
        run: |
          kymaenv=`cat "${USE_CASES}/use_cases/kyma-usecase-environment.json"`
          cat "${USE_CASES}/use_cases/SERVICE-kyma-data-lifecycle-services-standard-use-case.json" | jq --argjson a "${kymaenv}" '.services += [$a]' > kymausecase.json
          python3 btpsa \
          -parameterfile "${USE_CASES}/use_cases/kyma-usecase-parameters.json" \
          -usecasefile kymausecase.json \
          -kubeconfigpath ${{ env.KUBECONFIG_PATH}} \
          -k8snamespace ${{ env.K8S_NAMESPACE }} 
          cp /home/user/log/script.log /home/user/logs/k8s/report/data-lifecycle-services-standard.log
          cp /home/user/logs/k8s/report/apitestresult.json /home/user/logs/k8s/report/data-lifecycle-services-standard.json                            

      - name: 'Test Enterprise-messaging service and API'
        working-directory: /home/user
        shell: bash
        run: |
          kymaenv=`cat "${USE_CASES}/use_cases/kyma-usecase-environment.json"`
          cat "${USE_CASES}/use_cases/SERVICE-kyma-enterprise-messaging-default-use-case.json" | jq --argjson a "${kymaenv}" '.services += [$a]' > kymausecase.json
          python3 btpsa \
          -parameterfile "${USE_CASES}/use_cases/kyma-usecase-parameters.json" \
          -usecasefile kymausecase.json \
          -kubeconfigpath ${{ env.KUBECONFIG_PATH}} \
          -k8snamespace ${{ env.K8S_NAMESPACE }} 
          cp /home/user/log/script.log /home/user/logs/k8s/report/enterprise-messaging-default.log
          cp /home/user/logs/k8s/report/apitestresult.json /home/user/logs/k8s/report/enterprise-messaging-default.json                                                  

      - name: 'Test Feature flags service and API'
        working-directory: /home/user
        shell: bash
        run: |
          kymaenv=`cat "${USE_CASES}/use_cases/kyma-usecase-environment.json"`
          cat "${USE_CASES}/use_cases/SERVICE-kyma-feature-flags-standard-use-case.json" | jq --argjson a "${kymaenv}" '.services += [$a]' > kymausecase.json
          python3 btpsa \
          -parameterfile "${USE_CASES}/use_cases/kyma-usecase-parameters.json" \
          -usecasefile kymausecase.json \
          -kubeconfigpath ${{ env.KUBECONFIG_PATH}} \
          -k8snamespace ${{ env.K8S_NAMESPACE }} 
          cp /home/user/log/script.log /home/user/logs/k8s/report/feature-flags-standard.log
          cp /home/user/logs/k8s/report/apitestresult.json /home/user/logs/k8s/report/feature-flags-standard.json

      - name: 'Test Generic line item service and API'
        working-directory: /home/user
        shell: bash
        run: |
          kymaenv=`cat "${USE_CASES}/use_cases/kyma-usecase-environment.json"`
          cat "${USE_CASES}/use_cases/SERVICE-kyma-generic-line-item-matching-standard-use-case.json" | jq --argjson a "${kymaenv}" '.services += [$a]' > kymausecase.json
          python3 btpsa \
          -parameterfile "${USE_CASES}/use_cases/kyma-usecase-parameters.json" \
          -usecasefile kymausecase.json \
          -kubeconfigpath ${{ env.KUBECONFIG_PATH}} \
          -k8snamespace ${{ env.K8S_NAMESPACE }} 
          cp /home/user/log/script.log /home/user/logs/k8s/report/generic-line-item-matching-standard.log
          cp /home/user/logs/k8s/report/apitestresult.json /home/user/logs/k8s/report/generic-line-item-matching-standard.json

      - name: 'Test HTML5 Apps repo service and API'
        working-directory: /home/user
        shell: bash
        run: |
          kymaenv=`cat "${USE_CASES}/use_cases/kyma-usecase-environment.json"`
          cat "${USE_CASES}/use_cases/SERVICE-kyma-html5-apps-repo-app-host-use-case.json" | jq --argjson a "${kymaenv}" '.services += [$a]' > kymausecase.json
          python3 btpsa \
          -parameterfile "${USE_CASES}/use_cases/kyma-usecase-parameters.json" \
          -usecasefile kymausecase.json \
          -kubeconfigpath ${{ env.KUBECONFIG_PATH}} \
          -k8snamespace ${{ env.K8S_NAMESPACE }} 
          cp /home/user/log/script.log /home/user/logs/k8s/report/html5-apps-repo-app-host.log
          cp /home/user/logs/k8s/report/apitestresult.json /home/user/logs/k8s/report/html5-apps-repo-app-host.json          
        
      # - name: 'Test identity service and API'
      #   working-directory: /home/user
      #   shell: bash
      #   run: |
      #     kymaenv=`cat "${USE_CASES}/use_cases/kyma-usecase-environment.json"`
      #     cat "${USE_CASES}/use_cases/SERVICE-kyma-identity-application-use-case.json" | jq --argjson a "${kymaenv}" '.services += [$a]' > kymausecase.json       
      #     python3 btpsa \
      #     -parameterfile "${USE_CASES}/use_cases/kyma-usecase-parameters.json" \
      #     -usecasefile kymausecase.json \
      #     -kubeconfigpath ${{ env.KUBECONFIG_PATH}} \
      #     -k8snamespace ${{ env.K8S_NAMESPACE }} 
      #     cp /home/user/log/script.log /home/user/logs/k8s/report/identity-application.log
      #     cp /home/user/logs/k8s/report/apitestresult.json /home/user/logs/k8s/report/identity-application.json 

      - name: 'Test Malware scanner service and API'
        working-directory: /home/user
        shell: bash
        run: |
          kymaenv=`cat "${USE_CASES}/use_cases/kyma-usecase-environment.json"`
          cat "${USE_CASES}/use_cases/SERVICE-kyma-malware-scanner-clamav-use-case.json" | jq --argjson a "${kymaenv}" '.services += [$a]' > kymausecase.json
          python3 btpsa \
          -parameterfile "${USE_CASES}/use_cases/kyma-usecase-parameters.json" \
          -usecasefile kymausecase.json \
          -kubeconfigpath ${{ env.KUBECONFIG_PATH}} \
          -k8snamespace ${{ env.K8S_NAMESPACE }} 
          cp /home/user/log/script.log /home/user/logs/k8s/report/malware-scanner-clamav.log
          cp /home/user/logs/k8s/report/apitestresult.json /home/user/logs/k8s/report/malware-scanner-clamav.json 

      - name: 'Test Message Queuing service and API'
        working-directory: /home/user
        shell: bash
        run: |
          kymaenv=`cat "${USE_CASES}/use_cases/kyma-usecase-environment.json"`
          cat "${USE_CASES}/use_cases/SERVICE-kyma-message-queuing-standard-use-case.json" | jq --argjson a "${kymaenv}" '.services += [$a]' > kymausecase.json
          python3 btpsa \
          -parameterfile "${USE_CASES}/use_cases/kyma-usecase-parameters.json" \
          -usecasefile kymausecase.json \
          -kubeconfigpath ${{ env.KUBECONFIG_PATH}} \
          -k8snamespace ${{ env.K8S_NAMESPACE }} 
          cp /home/user/log/script.log /home/user/logs/k8s/report/message-queuing-standard.log
          cp /home/user/logs/k8s/report/apitestresult.json /home/user/logs/k8s/report/message-queuing-standard.json

      - name: 'Test Metering service and API'
        working-directory: /home/user
        shell: bash
        run: |
          kymaenv=`cat "${USE_CASES}/use_cases/kyma-usecase-environment.json"`
          cat "${USE_CASES}/use_cases/SERVICE-kyma-metering-service-development-use-case.json" | jq --argjson a "${kymaenv}" '.services += [$a]' > kymausecase.json
          python3 btpsa \
          -parameterfile "${USE_CASES}/use_cases/kyma-usecase-parameters.json" \
          -usecasefile kymausecase.json \
          -kubeconfigpath ${{ env.KUBECONFIG_PATH}} \
          -k8snamespace ${{ env.K8S_NAMESPACE }} 
          cp /home/user/log/script.log /home/user/logs/k8s/report/metering-service-development.log
          cp /home/user/logs/k8s/report/apitestresult.json /home/user/logs/k8s/report/metering-service-development.json          

      # - name: 'Test One-MDS service and API'
      #   working-directory: /home/user
      #   shell: bash
      #   run: |
      #     kymaenv=`cat "${USE_CASES}/use_cases/kyma-usecase-environment.json"`
      #     cat "${USE_CASES}/use_cases/SERVICE-kyma-one-mds-default-use-case.json" | jq --argjson a "${kymaenv}" '.services += [$a]' > kymausecase.json
      #     python3 btpsa \
      #     -parameterfile "${USE_CASES}/use_cases/kyma-usecase-parameters.json" \
      #     -usecasefile kymausecase.json \
      #     -kubeconfigpath ${{ env.KUBECONFIG_PATH}} \
      #     -k8snamespace ${{ env.K8S_NAMESPACE }} 
      #     cp /home/user/log/script.log /home/user/logs/k8s/report/one-mds-default.log
      #     cp /home/user/logs/k8s/report/apitestresult.json /home/user/logs/k8s/report/one-mds-default.json

      - name: 'Test Object store service and API'
        working-directory: /home/user
        shell: bash
        run: |
          kymaenv=`cat "${USE_CASES}/use_cases/kyma-usecase-environment.json"`
          cat "${USE_CASES}/use_cases/SERVICE-kyma-objectstore-standard-use-case.json" | jq --argjson a "${kymaenv}" '.services += [$a]' > kymausecase.json
          python3 btpsa \
          -parameterfile "${USE_CASES}/use_cases/kyma-usecase-parameters.json" \
          -usecasefile kymausecase.json \
          -kubeconfigpath ${{ env.KUBECONFIG_PATH}} \
          -k8snamespace ${{ env.K8S_NAMESPACE }} 
          cp /home/user/log/script.log /home/user/logs/k8s/report/objectstore-standard.log
          cp /home/user/logs/k8s/report/apitestresult.json /home/user/logs/k8s/report/objectstore-standard.json      

      #- name: 'Test SAP Graph service and API'
      #  working-directory: /home/user
      #  shell: bash
      #  run: |
      #    kymaenv=`cat "${USE_CASES}/use_cases/kyma-usecase-environment.json"`
      #    cat "${USE_CASES}/use_cases/SERVICE-kyma-sap-graph-standard-use-case.json" | jq --argjson a "${kymaenv}" '.services += [$a]' > kymausecase.json
      #    python3 btpsa \
      #    -parameterfile "${USE_CASES}/use_cases/kyma-usecase-parameters.json" \
      #    -usecasefile kymausecase.json \
      #    -kubeconfigpath ${{ env.KUBECONFIG_PATH}} \
      #    -k8snamespace ${{ env.K8S_NAMESPACE }} 
      #    cp /home/user/log/script.log /home/user/logs/k8s/report/sap-graph-standard.log
      #    cp /home/user/logs/k8s/report/apitestresult.json /home/user/logs/k8s/report/sap-graph-standard.json 

      - name: 'Test Retention-manager service and API'
        working-directory: /home/user
        shell: bash
        run: |
          kymaenv=`cat "${USE_CASES}/use_cases/kyma-usecase-environment.json"`
          cat "${USE_CASES}/use_cases/SERVICE-kyma-retention-manager-free-use-case.json" | jq --argjson a "${kymaenv}" '.services += [$a]' > kymausecase.json
          python3 btpsa \
          -parameterfile "${USE_CASES}/use_cases/kyma-usecase-parameters.json" \
          -usecasefile kymausecase.json \
          -kubeconfigpath ${{ env.KUBECONFIG_PATH}} \
          -k8snamespace ${{ env.K8S_NAMESPACE }} 
          cp /home/user/log/script.log /home/user/logs/k8s/report/retention-manager-free.log
          cp /home/user/logs/k8s/report/apitestresult.json /home/user/logs/k8s/report/retention-manager-free.json

      - name: 'Test Service Manager service and API'
        working-directory: /home/user
        shell: bash
        run: |
          kymaenv=`cat "${USE_CASES}/use_cases/kyma-usecase-environment.json"`
          cat "${USE_CASES}/use_cases/SERVICE-kyma-service-manager-container-use-case.json" | jq --argjson a "${kymaenv}" '.services += [$a]' > kymausecase.json
          python3 btpsa \
          -parameterfile "${USE_CASES}/use_cases/kyma-usecase-parameters.json" \
          -usecasefile kymausecase.json \
          -kubeconfigpath ${{ env.KUBECONFIG_PATH}} \
          -k8snamespace ${{ env.K8S_NAMESPACE }} 
          cp /home/user/log/script.log /home/user/logs/k8s/report/service-manager-container.log
          cp /home/user/logs/k8s/report/apitestresult.json /home/user/logs/k8s/report/service-manager-container.json

      - name: 'Test Spatialservices service and API'
        working-directory: /home/user
        shell: bash
        run: |
          kymaenv=`cat "${USE_CASES}/use_cases/kyma-usecase-environment.json"`
          cat "${USE_CASES}/use_cases/SERVICE-kyma-spatialservices-lite-use-case.json" | jq --argjson a "${kymaenv}" '.services += [$a]' > kymausecase.json
          python3 btpsa \
          -parameterfile "${USE_CASES}/use_cases/kyma-usecase-parameters.json" \
          -usecasefile kymausecase.json \
          -kubeconfigpath ${{ env.KUBECONFIG_PATH}} \
          -k8snamespace ${{ env.K8S_NAMESPACE }} 
          cp /home/user/log/script.log /home/user/logs/k8s/report/spatialservices-lite.log
          cp /home/user/logs/k8s/report/apitestresult.json /home/user/logs/k8s/report/spatialservices-lite.json 

      - name: 'Test Slis service and API'
        working-directory: /home/user
        shell: bash
        run: |
          kymaenv=`cat "${USE_CASES}/use_cases/kyma-usecase-environment.json"`
          cat "${USE_CASES}/use_cases/SERVICE-kyma-slis-standard-use-case.json" | jq --argjson a "${kymaenv}" '.services += [$a]' > kymausecase.json
          python3 btpsa \
          -parameterfile "${USE_CASES}/use_cases/kyma-usecase-parameters.json" \
          -usecasefile kymausecase.json \
          -kubeconfigpath ${{ env.KUBECONFIG_PATH}} \
          -k8snamespace ${{ env.K8S_NAMESPACE }} 
          cp /home/user/log/script.log /home/user/logs/k8s/report/slis-standard.log
          cp /home/user/logs/k8s/report/apitestresult.json /home/user/logs/k8s/report/slis-standard.json

      - name: 'Test SDM service and API'
        working-directory: /home/user
        shell: bash
        run: |
          kymaenv=`cat "${USE_CASES}/use_cases/kyma-usecase-environment.json"`
          cat "${USE_CASES}/use_cases/SERVICE-kyma-sdm-free-use-case.json" | jq --argjson a "${kymaenv}" '.services += [$a]' > kymausecase.json
          python3 btpsa \
          -parameterfile "${USE_CASES}/use_cases/kyma-usecase-parameters.json" \
          -usecasefile kymausecase.json \
          -kubeconfigpath ${{ env.KUBECONFIG_PATH}} \
          -k8snamespace ${{ env.K8S_NAMESPACE }} 
          cp /home/user/log/script.log /home/user/logs/k8s/report/sdm-free.log
          cp /home/user/logs/k8s/report/apitestresult.json /home/user/logs/k8s/report/sdm-free.json          

      - name: 'Test transport service and API'
        working-directory: /home/user
        shell: bash
        run: |
          kymaenv=`cat "${USE_CASES}/use_cases/kyma-usecase-environment.json"`
          cat "${USE_CASES}/use_cases/SERVICE-kyma-transport-standard-use-case.json" | jq --argjson a "${kymaenv}" '.services += [$a]' > kymausecase.json
          python3 btpsa \
          -parameterfile "${USE_CASES}/use_cases/kyma-usecase-parameters.json" \
          -usecasefile kymausecase.json \
          -kubeconfigpath ${{ env.KUBECONFIG_PATH}} \
          -k8snamespace ${{ env.K8S_NAMESPACE }} 
          cp /home/user/log/script.log /home/user/logs/k8s/report/transport-standard.log
          cp /home/user/logs/k8s/report/apitestresult.json /home/user/logs/k8s/report/transport-standard.json

      - name: 'Test uas reporting service and API'
        working-directory: /home/user
        shell: bash
        run: |
          kymaenv=`cat "${USE_CASES}/use_cases/kyma-usecase-environment.json"`
          cat "${USE_CASES}/use_cases/SERVICE-kyma-uas-reporting-ga-admin-use-case.json" | jq --argjson a "${kymaenv}" '.services += [$a]' > kymausecase.json
          python3 btpsa \
          -parameterfile "${USE_CASES}/use_cases/kyma-usecase-parameters.json" \
          -usecasefile kymausecase.json \
          -kubeconfigpath ${{ env.KUBECONFIG_PATH}} \
          -k8snamespace ${{ env.K8S_NAMESPACE }} 
          cp /home/user/log/script.log /home/user/logs/k8s/report/uas-reporting-ga-admin.log
          cp /home/user/logs/k8s/report/apitestresult.json /home/user/logs/k8s/report/uas-reporting-ga-admin.json

      - name: 'Test UI5 Flexibility Personalization service and API'
        working-directory: /home/user
        shell: bash
        run: |
          kymaenv=`cat "${USE_CASES}/use_cases/kyma-usecase-environment.json"`
          cat "${USE_CASES}/use_cases/SERVICE-kyma-ui5-flexibility-personalization-personalization-use-case.json" | jq --argjson a "${kymaenv}" '.services += [$a]' > kymausecase.json
          python3 btpsa \
          -parameterfile "${USE_CASES}/use_cases/kyma-usecase-parameters.json" \
          -usecasefile kymausecase.json \
          -kubeconfigpath ${{ env.KUBECONFIG_PATH}} \
          -k8snamespace ${{ env.K8S_NAMESPACE }} 
          cp /home/user/log/script.log /home/user/logs/k8s/report/ui5-flexibility-personalization-personalization.log
          cp /home/user/logs/k8s/report/apitestresult.json /home/user/logs/k8s/report/ui5-flexibility-personalization-personalization.json  

      - name: 'Test UI5 Flexibility keyuser service and API'
        working-directory: /home/user
        shell: bash
        run: |
          kymaenv=`cat "${USE_CASES}/use_cases/kyma-usecase-environment.json"`
          cat "${USE_CASES}/use_cases/SERVICE-kyma-ui5-flexibility-keyuser-free-use-case.json" | jq --argjson a "${kymaenv}" '.services += [$a]' > kymausecase.json
          python3 btpsa \
          -parameterfile "${USE_CASES}/use_cases/kyma-usecase-parameters.json" \
          -usecasefile kymausecase.json \
          -kubeconfigpath ${{ env.KUBECONFIG_PATH}} \
          -k8snamespace ${{ env.K8S_NAMESPACE }} 
          cp /home/user/log/script.log /home/user/logs/k8s/report/ui5-flexibility-keyuser-free.log
          cp /home/user/logs/k8s/report/apitestresult.json /home/user/logs/k8s/report/ui5-flexibility-keyuser-free.json                                                                                     
          
      - name: 'Test xsuaa service and API'
        working-directory: /home/user
        shell: bash
        run: |
          kymaenv=`cat "${USE_CASES}/use_cases/kyma-usecase-environment.json"`
          cat "${USE_CASES}/use_cases/SERVICE-kyma-xsuaa-application-use-case.json" | jq --argjson a "${kymaenv}" '.services += [$a]' > kymausecase.json       
          python3 btpsa \
          -parameterfile "${USE_CASES}/use_cases/kyma-usecase-parameters.json" \
          -usecasefile kymausecase.json \
          -kubeconfigpath ${{ env.KUBECONFIG_PATH}} \
          -k8snamespace ${{ env.K8S_NAMESPACE }} 
          cp /home/user/log/script.log /home/user/logs/k8s/report/xsuaa-application.log
          cp /home/user/logs/k8s/report/apitestresult.json /home/user/logs/k8s/report/xsuaa-application.json          
          
      # - name: 'Upload reports'
      #   working-directory: /home/user
      #   shell: bash
      #   run: |
      #     git clone https://${GIT_TOOL_TOKEN}@github.tools.sap/BTP-E2EScenarioValidation/crossconsumption-report.git
      #     ls -la
      #     cp /home/user/log/*.log /home/user/logs/k8s/report/
      #     rm /home/user/logs/k8s/report/index.html
      #     rm /home/user/logs/k8s/report/apitestresult.json
      #     cp ${USE_CASES}/script/template_index.html /home/user/config/templates/report/index.html
      #     python3 ${USE_CASES}/script/consolidator.py ${GIT_TOOL_TOKEN}
      #     cp /home/user/logs/k8s/report/* /home/user/crossconsumption-report/logs/ 
      #     cp /home/user/crossconsumption-report/logs/index.html /home/user/crossconsumption-report/docs/ 
      #     cd crossconsumption-report
      #     git config --global user.name "E2EVal-actions[bot]"
      #     git config user.email "github-actions[bot]@users.noreply.github.com"
      #     git add .
      #     git commit -m "Log Commit $(TZ=IST-5:30 date +%F_%T) IST"
      #     git remote set-url origin https://${GIT_TOOL_TOKEN}@github.tools.sap/BTP-E2EScenarioValidation/crossconsumption-report.git
      #     git push
          
          

      - name: 'Upload reports'
        working-directory: /home/user
        shell: bash
        run: |
          git clone https://${GIT_TOOL_TOKEN}@github.tools.sap/BTP-E2EScenarioValidation/btpsatest.git
          ls -la
          cp /home/user/log/*.log /home/user/logs/k8s/report/
          rm /home/user/logs/k8s/report/index.html
          rm /home/user/logs/k8s/report/apitestresult.json
          cp ${USE_CASES}/script/template_index.html /home/user/config/templates/report/index.html
          python3 ${USE_CASES}/script/consolidator.py ${GIT_TOOL_TOKEN}
          cp /home/user/logs/k8s/report/* /home/user/btpsatest/logs/ 
          cp /home/user/btpsatest/logs/index.html /home/user/btpsatest/docs/ 
          cd btpsatest
          git config --global user.name "E2EVal-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Log Commit $(TZ=IST-5:30 date +%F_%T) IST"
          git remote set-url origin https://${GIT_TOOL_TOKEN}@github.tools.sap/BTP-E2EScenarioValidation/btpsatest.git
          git push        
