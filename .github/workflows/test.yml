name: CI

on:
  workflow_dispatch:

  pull_request:
    types: [opened, reopened]

env:
  K8S_NAMESPACE: btpsa

jobs:
  singleservice-test:
    runs-on: ubuntu-latest
    container:
      image: shivakumarp12/btp-setup-automator:latest
      options: --user root

    env:
      BTPSA_PARAM_MYEMAIL: ${{ secrets.BTPSA_PARAM_MYEMAIL }}
      BTPSA_PARAM_GLOBALACCOUNT: ${{ secrets.BTPSA_PARAM_GLOBALACCOUNT_KYMA }}
      BTPSA_PARAM_MYPASSWORD: ${{ secrets.BTPSA_PARAM_MYPASSWORD }}
      USE_CASES: ${{ github.workspace }}
      GIT_TOOL_TOKEN: ${{ secrets.GIT_TOOL_TOKEN }}
      KUBECONFIG_PATH: ${{ github.workspace }}/.kube/serviceaccount.yaml       

    steps:
      - name: store kubeconfig
        shell: bash
        run: |
          mkdir -p ${{ github.workspace }}/.kube && \
          chown 777 ${{ github.workspace }}/.kube && \
          printf "${{ secrets.SERVICE_ACCOUNT_KYMA1 }}" > ${{ env.KUBECONFIG_PATH }}
      - name: checkout repository
        uses: actions/checkout@v2          
      - name: Authenticate with Kubernetes
        uses: azure/k8s-set-context@v2
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.SERVICE_ACCOUNT_KYMA1 }}
      - name: Check connection
        shell: bash
        run: |
          kubectl get ns 

      - name: On Pull request
        if: success() || failure()
        working-directory: /home/user
        shell: bash
        run: |
          echo "Pull request done"
# on:
#   workflow_dispatch:
# jobs:
#   myjob:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Step 1
#         id: hello
#         run: echo ::set-output name=status::failure
#         continue-on-error: true
#       - name: Step 2
#         id: world
#         run: echo ::set-output name=status::success
#         continue-on-error: true
#       - name: Dump steps context
#         env:
#           STEPS_CONTEXT: ${{ toJson(steps) }}
#         run: echo "$STEPS_CONTEXT"
#       - name: Check on failures
#         if: steps.hello.outputs.status == 'failure' || steps.world.outputs.status == 'failure'
#         run: exit 1
